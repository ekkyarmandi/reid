"""initial migration

Revision ID: 509a9bfc6f64
Revises: 
Create Date: 2025-04-18 15:31:56.064919

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '509a9bfc6f64'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('duplicate_listing',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('source_url', sa.Text(), nullable=False),
    sa.Column('duplicate_url', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('source_url', 'duplicate_url', name='uq_source_duplicate')
    )
    op.create_table('error',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('url', sa.Text(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('url', 'error_message', name='uq_url_error_message')
    )
    op.create_table('listing',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('property_id', sa.String(), nullable=True),
    sa.Column('reid_id', sa.String(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('scraped_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('url', sa.Text(), nullable=False),
    sa.Column('image_url', sa.Text(), nullable=False),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('leasehold_years', sa.Float(), nullable=True),
    sa.Column('contract_type', sa.String(), nullable=True),
    sa.Column('property_type', sa.String(), nullable=True),
    sa.Column('listed_date', sa.String(), nullable=True),
    sa.Column('bedrooms', sa.Float(), nullable=True),
    sa.Column('bathrooms', sa.Float(), nullable=True),
    sa.Column('build_size', sa.Float(), nullable=True),
    sa.Column('land_size', sa.Float(), nullable=True),
    sa.Column('land_zoning', sa.String(), nullable=True),
    sa.Column('price', sa.BigInteger(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.Column('availability', sa.String(), nullable=True),
    sa.Column('is_off_plan', sa.Boolean(), nullable=True),
    sa.Column('sold_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('is_excluded', sa.Boolean(), nullable=True),
    sa.Column('excluded_by', sa.String(), nullable=True),
    sa.Column('tab', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('url')
    )
    op.create_index('idx_listing_availability', 'listing', ['availability'], unique=False)
    op.create_index('idx_listing_created_at', 'listing', ['created_at'], unique=False)
    op.create_index('idx_listing_is_available', 'listing', ['is_available'], unique=False)
    op.create_index('idx_listing_reid_id', 'listing', ['reid_id'], unique=False)
    op.create_index('idx_listing_source', 'listing', ['source'], unique=False)
    op.create_index('idx_listing_tab', 'listing', ['tab'], unique=False)
    op.create_index('idx_listing_updated_at', 'listing', ['updated_at'], unique=False)
    op.create_index('idx_listing_url', 'listing', ['url'], unique=True)
    op.create_table('property',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('property_id', sa.String(), nullable=True),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('scraped_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('url', sa.Text(), nullable=False),
    sa.Column('image_url', sa.Text(), nullable=False),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('location', sa.Text(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('leasehold_years', sa.Float(), nullable=True),
    sa.Column('contract_type', sa.String(), nullable=True),
    sa.Column('property_type', sa.String(), nullable=True),
    sa.Column('listed_date', sa.String(), nullable=True),
    sa.Column('bedrooms', sa.Float(), nullable=True),
    sa.Column('bathrooms', sa.Float(), nullable=True),
    sa.Column('build_size', sa.Float(), nullable=True),
    sa.Column('land_size', sa.Float(), nullable=True),
    sa.Column('land_zoning', sa.String(), nullable=True),
    sa.Column('price', sa.BigInteger(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.Column('availability', sa.String(), nullable=True),
    sa.Column('is_off_plan', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_property_availability', 'property', ['availability'], unique=False)
    op.create_index('idx_property_created_at', 'property', ['created_at'], unique=False)
    op.create_index('idx_property_is_available', 'property', ['is_available'], unique=False)
    op.create_index('idx_property_source', 'property', ['source'], unique=False)
    op.create_index('idx_property_url', 'property', ['url'], unique=False)
    op.create_table('queue',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('url')
    )
    op.create_table('reports',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('scraped_at', sa.DateTime(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('item_scraped_count', sa.Integer(), nullable=False),
    sa.Column('item_dropped_count', sa.Integer(), nullable=False),
    sa.Column('response_error_count', sa.Integer(), nullable=False),
    sa.Column('elapsed_time_seconds', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tags',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('property_id', sa.String(), nullable=False),
    sa.Column('is_solved', sa.Boolean(), nullable=True),
    sa.Column('is_ignored', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('property_id', 'name', name='_property_name_uc')
    )
    op.create_index('idx_tag_is_ignored', 'tags', ['is_ignored'], unique=False)
    op.create_index('idx_tag_is_solved', 'tags', ['is_solved'], unique=False)
    op.create_index('idx_tag_name', 'tags', ['name'], unique=False)
    op.create_index('idx_tag_property_id', 'tags', ['property_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_tag_property_id', table_name='tags')
    op.drop_index('idx_tag_name', table_name='tags')
    op.drop_index('idx_tag_is_solved', table_name='tags')
    op.drop_index('idx_tag_is_ignored', table_name='tags')
    op.drop_table('tags')
    op.drop_table('reports')
    op.drop_table('queue')
    op.drop_index('idx_property_url', table_name='property')
    op.drop_index('idx_property_source', table_name='property')
    op.drop_index('idx_property_is_available', table_name='property')
    op.drop_index('idx_property_created_at', table_name='property')
    op.drop_index('idx_property_availability', table_name='property')
    op.drop_table('property')
    op.drop_index('idx_listing_url', table_name='listing')
    op.drop_index('idx_listing_updated_at', table_name='listing')
    op.drop_index('idx_listing_tab', table_name='listing')
    op.drop_index('idx_listing_source', table_name='listing')
    op.drop_index('idx_listing_reid_id', table_name='listing')
    op.drop_index('idx_listing_is_available', table_name='listing')
    op.drop_index('idx_listing_created_at', table_name='listing')
    op.drop_index('idx_listing_availability', table_name='listing')
    op.drop_table('listing')
    op.drop_table('error')
    op.drop_table('duplicate_listing')
    # ### end Alembic commands ###
